(function($) {
    var data_click = "unobtrusiveAjaxClick",
        data_validation = "unobtrusiveValidation";
    
    function getFunction(code, argNames) {
        var fn = window,
            parts = (code || "").split(".");
        while (fn && parts.length) {
            fn = fn[parts.shift()]
        };
        if (typeof(fn) === "function") {
            return fn
        };
        argNames.push(code);
        return Function.constructor.apply(null, argNames)
    };
    function isMethodProxySafe(method) {
        return method === "GET" || method === "POST"
    };
    function asyncOnBeforeSend(xhr, method) {
        if (!isMethodProxySafe(method)) {
            xhr.setRequestHeader("X-HTTP-Method-Override", method)
        }
    };
    function asyncOnSuccess(element, data, contentType) {
        var mode;
        if (contentType.indexOf("application/x-javascript") !== -1) {
            return
        };
        mode = (element.getAttribute("data-ajax-mode") || "").toUpperCase();
        $(element.getAttribute("data-ajax-update")).each(function(i, update) {
            var top;
            switch (mode) {
            case "BEFORE":
                top = update.firstChild;
                $("<div />").html(data).contents().each(function() {
                    update.insertBefore(this, top)
                });
                break;
            case "AFTER":
                $("<div />").html(data).contents().each(function() {
                    update.appendChild(this)
                });
                break;
            default:
                $(update).html(data);
                break
            }
        })
    };
    function asyncRequest(element, options) {
        var confirm, loading, method, duration;
        confirm = element.getAttribute("data-ajax-confirm");
        if (confirm && !window.confirm(confirm)) {
            return
        };
        loading = $(element.getAttribute("data-ajax-loading"));
        duration = element.getAttribute("data-ajax-loading-duration") || 0;
        $.extend(options, {
            type: element.getAttribute("data-ajax-method") || undefined,
            url: element.getAttribute("data-ajax-url") || undefined,
            beforeSend: function(xhr) {
                var result;
                asyncOnBeforeSend(xhr, method);
                result = getFunction(element.getAttribute("data-ajax-begin"), ["xhr"]).apply(this, arguments);
                if (result !== false) {
                    loading.show(duration)
                };
                return result
            },
            complete: function() {
                loading.hide(duration);
                getFunction(element.getAttribute("data-ajax-complete"), ["xhr", "status"]).apply(this, arguments)
            },
            success: function(data, status, xhr) {
                asyncOnSuccess(element, data, xhr.getResponseHeader("Content-Type") || "text/html");
                getFunction(element.getAttribute("data-ajax-success"), ["data", "status", "xhr"]).apply(this, arguments)
            },
            error: getFunction(element.getAttribute("data-ajax-failure"), ["xhr", "status", "error"])
        });
        options.data.push({
            name: "X-Requested-With",
            value: "XMLHttpRequest"
        });
        method = options.type.toUpperCase();
        if (!isMethodProxySafe(method)) {
            options.type = "POST";
            options.data.push({
                name: "X-HTTP-Method-Override",
                value: method
            })
        };
        $.ajax(options)
    };
    $(function() {
        $("div[data-ajax=true]").each(function(i, evt) {
            asyncRequest(this, {
                url: $(this).attr("href"),
                type: "GET",
                data: []
            })
        })
    });
    $("a[data-ajax=true]").live("click", function(evt) {
        evt.preventDefault();
        asyncRequest(this, {
            url: this.href,
            type: "GET",
            data: []
        })
    });
     $("#examda_message_table").find("a").click(function () {
            $(this).parent().siblings("li").removeClass("on");
	        $(this).parent().addClass("on");
	  });
    $(function(){
    	var a=document.getElementById("a_loads");
    	 asyncRequest(a, {
             url: a.href,
             type: "GET",
             data: []
         })
    });
}(jQuery));